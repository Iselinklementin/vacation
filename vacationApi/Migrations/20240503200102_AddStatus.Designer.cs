// <auto-generated />
using System;
using EmployeeApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace vacationApi.Migrations
{
    [DbContext(typeof(EmployeeContext))]
    [Migration("20240503200102_AddStatus")]
    partial class AddStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("EmployeeApi.Models.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumDays")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("EmployeeApi.Models.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Remaining")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeeApi.Models.Holidays", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CountryCode")
                        .HasColumnType("TEXT");

                    b.Property<long?>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("EmployeeApi.Models.VacationEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("From")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("To")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("VacationEntry");
                });

            modelBuilder.Entity("EmployeeApi.Models.Holidays", b =>
                {
                    b.HasOne("EmployeeApi.Models.Country", null)
                        .WithMany("Holidays")
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("EmployeeApi.Models.VacationEntry", b =>
                {
                    b.HasOne("EmployeeApi.Models.Employee", null)
                        .WithMany("VacationEntries")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("EmployeeApi.Models.Country", b =>
                {
                    b.Navigation("Holidays");
                });

            modelBuilder.Entity("EmployeeApi.Models.Employee", b =>
                {
                    b.Navigation("VacationEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
